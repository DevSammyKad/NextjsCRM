generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String @id @unique
  email        String
  firstName    String
  lastName     String
  profileImage String
  role         Role   @default(STUDENT)
}

model Student {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  age         Int
  grade       String
  address     String
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_members {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String?
  email      String?  @unique
  role       String?  @default("member")
  status     String?  @default("active")
  team_id    String?  @db.Uuid
  teams      teams?   @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model teams {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  name         String?
  owner_id     String?        @db.Uuid
  team_members team_members[]
}

enum Role {
  STUDENT
  MEMBER
  ADMIN
}
